# fix_warmup_call.py - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å warm_up_predictor

def fix_main_py():
    """‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç main.py ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å warm_up_predictor ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á predictor"""
    
    print("üîß Fixing warm_up_predictor call in main.py...")
    
    # ‡∏≠‡πà‡∏≤‡∏ô main.py
    with open('main.py', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    # ‡∏´‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á predictor
    for i, line in enumerate(lines):
        if 'predictor = AdvancedAIPredictor()' in line:
            print(f"Found predictor initialization at line {i+1}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å warm_up_predictor ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if i+1 < len(lines) and 'warm_up_predictor' not in lines[i+1]:
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å warm_up_predictor
                indent = len(line) - len(line.lstrip())
                warm_up_line = ' ' * indent + 'warm_up_predictor(predictor)\n'
                lines.insert(i+1, warm_up_line)
                print(f"‚úÖ Added warm_up_predictor call at line {i+2}")
                
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
                with open('main.py', 'w', encoding='utf-8') as f:
                    f.writelines(lines)
                
                print("‚úÖ main.py updated successfully!")
                return True
            else:
                print("‚úÖ warm_up_predictor call already exists")
                return False
    
    print("‚ùå Could not find predictor initialization line")
    return False

if __name__ == "__main__":
    print("üöÄ Fixing warm_up_predictor call")
    print("="*50)
    
    if fix_main_py():
        print("\n‚úÖ Fixed! Now run: python main.py")
        print("You should see historical data being loaded at startup")
    else:
        print("\n‚ö†Ô∏è  No changes needed or error occurred")
